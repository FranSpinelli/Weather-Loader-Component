# General

spring.application.name=Weather-Loader-Component

# Server

server.port=8081
server.servlet.context-path=/weather-loader-component

# Mongo

spring.data.mongodb.uri=mongodb+srv://${mongo.user}:${mongo.pass}@${mongo.host}/${mongo.db}?retryWrites=true&w=majority&appName=Free-Market
mongo.user = ${ar.edu.unq.weather.loader.component.weather.mongo.user}
mongo.pass = ${ar.edu.unq.weather.loader.component.weather.mongo.pass}
mongo.host = ${ar.edu.unq.weather.loader.component.weather.mongo.host}
mongo.db = ${ar.edu.unq.weather.loader.component.weather.mongo.db}

# Métricas para Prometheus
management.endpoints.web.exposure.include=*
management.endpoint.prometheus.enabled=true
management.endpoint.health.show.details= "always"
management.metrics.export.prometheus.enabled=true


# Configuracion Resilience4j Circuit Breaker contra Open Weather API
resilience4j.circuitbreaker.instances.getCurrentWeatherReport.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.getCurrentWeatherReport.slidingWindowSize=5
resilience4j.circuitbreaker.instances.getCurrentWeatherReport.minimumNumberOfCalls=3
resilience4j.circuitbreaker.instances.getCurrentWeatherReport.permittedNumberOfCallsInHalfOpenState=2
resilience4j.circuitbreaker.instances.getCurrentWeatherReport.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.getCurrentWeatherReport.waitDurationInOpenState=60s
resilience4j.circuitbreaker.instances.getCurrentWeatherReport.failureRateThreshold=50
resilience4j.circuitbreaker.instances.getCurrentWeatherReport.eventConsumerBufferSize=10


# Configuracion Resilience4j Ratelimiter
resilience4j.ratelimiter.instances.get-temperature-limiter.limit-for-period=3
resilience4j.ratelimiter.instances.get-temperature-limiter.limit-refresh-period=30s
resilience4j.ratelimiter.instances.get-temperature-limiter.timeout-duration=500ms